from typing import Protocol

from .models import MemoryMatch, MemoryQuery, MemoryRecord


class MemoryStore(Protocol):
    def add(self, record: MemoryRecord) -> str: ...
    def get(self, id: str) -> MemoryRecord | None: ...
    def delete(self, id: str) -> bool: ...
    def search(self, query: MemoryQuery) -> list[MemoryMatch]: ...


class MemoryContext(Protocol):
    def register_store(self, name: str, store: MemoryStore) -> None: ...
    def store(self, name: str) -> MemoryStore: ...
    def search(self, query: MemoryQuery) -> list[MemoryMatch]: ...
